import{fetchWithAuth}from"./../../../../../static/main/main/js/useAuth.min.js";let sortButton=document.querySelector(".gallery__sort-button"),sortDropdown=document.querySelector(".gallery__sort-dropdown"),sortItems=document.querySelectorAll(".gallery__sort-item"),tabs=document.querySelectorAll(".gallery__tab"),nftsWrapper=document.querySelector(".gallery__items"),loader=document.getElementById("categoryLoader"),searchInput=document.querySelector(".gallery__search-input"),userId=window.location.href.split("/").at(-1),galleryFilters=document.querySelector(".gallery__controls"),currentTab=JSON.parse(sessionStorage.getItem("currentProfileTab"))??1,currentNfts=[],gridInstance=null,filters={currentTab:Number(currentTab),sortBy:1,search:""},searchTimeout;function initApp(){initUi(),initTabs()}function initUi(){3==currentTab||4===currentTab?galleryFilters.style.display="none":galleryFilters.style.display="flex",sortButton.addEventListener("click",function(e){e.stopPropagation(),sortDropdown.style.display="none"===sortDropdown.style.display?"block":"none"}),sortItems.forEach(e=>{e.addEventListener("click",async function(){var e=this.textContent;sortButton.querySelector("span").textContent=e,filters.sortBy=Number(this.dataset.sortid),sortDropdown.style.display="none",await loadNfts(filters)})}),searchInput.addEventListener("input",async function(){clearTimeout(searchTimeout),loader.style.display="flex",nftsWrapper.style.display="none",searchTimeout=setTimeout(async()=>{filters.search=this.value,await loadNfts(filters),loader.style.display="none",nftsWrapper.style.display="flex"},300)}),document.addEventListener("click",function(){sortDropdown.style.display="none"}),nftsWrapper.addEventListener("click",async e=>{e=e.target;if(e.matches("button.reject")){var t=e.dataset.id;try{var r=await fetchWithAuth(`/api/user/offers/${t}/reject`,{method:"POST"}),a=await r.json();r.ok?window.location.reload():console.log(a.errors)}catch(e){console.error("Reject offer failed",e)}}if(e.matches("button.accept")){t=e.dataset.id;try{var n=await fetchWithAuth(`/api/user/offers/${t}/accept`,{method:"POST"}),i=await n.json();n.ok?window.location.reload():console.log(i.errors)}catch(e){console.error("Reject offer failed",e)}}})}function initTabs(){let e=tabs[currentTab-1];e||(currentTab=1,e=tabs[currentTab-1]),e.classList.add("gallery__tab--active"),tabs.forEach(e=>{e.addEventListener("click",nftsByTab)})}async function nftsByTab(e){tabs.forEach(e=>e.classList.remove("gallery__tab--active"));e=e.target.closest(".gallery__tab"),e.classList.add("gallery__tab--active"),e=Number(e.dataset.tabid);currentTab=e,sessionStorage.setItem("currentProfileTab",e),3==currentTab||4==currentTab?galleryFilters.style.display="none":galleryFilters.style.display="flex",filters.currentTab=currentTab,loader.style.display="flex",nftsWrapper.style.display="none",await loadNfts(filters)}async function loadNfts(r){var[e,t]=await(async()=>{let e,t;if([1,2].includes(r.currentTab))e="/api/user/"+userId;else{if(3==r.currentTab)return e="/api/user/offers",t="offers",[await fetchData(e,"GET",{}),t];if(4==r.currentTab)return e="/api/user/offers/completed",t="deals",[await fetchData(e,"GET",{}),t];if(5!==r.currentTab)return;e="/api/user/my"}return t="nft",[await fetchData(e,"POST",{headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),t]})();switch(nftsWrapper.innerHTML="",t){case"nft":e&&0!==e.data.length?renderNfts(e.data):noNftsRender();break;case"offers":renderOffers(e.data);break;case"deals":renderDeals(e.data)}}async function fetchData(e,t,r){try{var a=await fetchWithAuth(e,{method:t,...r}),n=await a.json();if(a.ok)return n;console.log(n.errors)}catch(e){}finally{setTimeout(()=>{loader.style.display="none",nftsWrapper.style.display="flex"},200)}}function renderDeals(e){var t;gridInstance&&((t=nftsWrapper.querySelector(".gridjs"))&&t.remove(),gridInstance=null),gridInstance=new gridjs.Grid({columns:[{name:"NFT",sort:!1},{name:"Buyer",sort:!1},{name:"Amount",formatter:e=>gridjs.html(e+" ETH")},{name:"Percentage",formatter:e=>gridjs.html(`
            <span style="font-weight: 500; color: ${90<e?"green":e<50?"red":"#999"}">
              %${e}
            </span>
          `)},{name:"Old Price",formatter:e=>gridjs.html(e+" ETH")},{name:"Created At",formatter:e=>gridjs.html(`
            <time title="${e}">
              ${new Intl.DateTimeFormat("en-GB",{weekday:"short",day:"numeric",month:"short",year:"numeric",hour:"2-digit",minute:"2-digit"}).format(new Date(e))}
            </time>
          `)},{name:"Expires In",formatter:e=>gridjs.html(`
            <time title="${e}">
              ${new Intl.DateTimeFormat("en-GB",{weekday:"short",day:"numeric",month:"short",year:"numeric",hour:"2-digit",minute:"2-digit"}).format(new Date(e))}
            </time>
          `)}],data:e.map(e=>[gridjs.html(`
        <a href='/nft/${e.nft.token_id}'>
          <div style="display: flex; justify-content: center; align-items: center;gap: 12px;padding: 4px 0">
            <div style="
              width: 40px;
              height: 40px;
              border-radius: 12px;
              overflow: hidden;
              box-shadow: 0 2px 6px rgba(0,0,0,0.1);
              border: 1px solid #ddd;
            ">
              <img src="/nft/${e.nft.token_id}/get-image" alt="${e.nft.name}"           style="
                object-fit: cover;
                width: 100%;
                height: 100%;
              " />
            </div>
            <span style="font-weight: 500; font-size: 14px;">${e.nft.name}</span>
          </div>
        </a>
      `),gridjs.html(`
        <a href="/user/profile/${e.buyer.id}">${e.buyer.id===userId?"me":"@"+e.buyer.username}</a>
      `),Number(e.amount),Number(e.percentage),Number(e.price_at_offer),new Date(e.created_at),new Date(e.expires_in)]),search:!1,sort:!0,style:{table:{width:"100%",fontFamily:"Inter, sans-serif",fontSize:"14px"},th:{textAlign:"center"},td:{textAlign:"center",padding:"12px 10px"}}});try{gridInstance.render(nftsWrapper),gridInstance.forceRender(nftsWrapper)}catch(e){}}function renderOffers(e){var t;gridInstance&&((t=nftsWrapper.querySelector(".gridjs"))&&t.remove(),gridInstance=null),nftsWrapper.innerHTML="",gridInstance=new gridjs.Grid({columns:[{name:"NFT",sort:!1},{name:"Buyer",sort:!1},{name:"Amount",formatter:e=>gridjs.html(e+" ETH")},{name:"Percentage",formatter:e=>gridjs.html(`
            <span style="font-weight: 500; color: ${90<e?"green":e<50?"red":"#999"}">
              %${e}
            </span>
          `)},{name:"Created At",formatter:e=>gridjs.html(`
            <time title="${e}">
              ${new Intl.DateTimeFormat("en-GB",{weekday:"short",day:"numeric",month:"short",year:"numeric",hour:"2-digit",minute:"2-digit"}).format(new Date(e))}
            </time>
          `)},{name:"Expires In",formatter:e=>gridjs.html(`
            <time title="${e}">
              ${new Intl.DateTimeFormat("en-GB",{weekday:"short",day:"numeric",month:"short",year:"numeric",hour:"2-digit",minute:"2-digit"}).format(new Date(e))}
            </time>
          `)},{name:"Actions",sort:!1}],data:e.map(e=>[gridjs.html(`
        <a href='/nft/${e.nft.token_id}'>
          <div style="display: flex; justify-content: center; align-items: center;gap: 12px;padding: 4px 0">
            <div style="
              width: 40px;
              height: 40px;
              border-radius: 12px;
              overflow: hidden;
              box-shadow: 0 2px 6px rgba(0,0,0,0.1);
              border: 1px solid #ddd;
            ">
              <img src="/nft/${e.nft.token_id}/get-image" alt="${e.nft.name}"           style="
                object-fit: cover;
                width: 100%;
                height: 100%;
              " />
            </div>
            <span style="font-weight: 500; font-size: 14px;">${e.nft.name}</span>
          </div>
        </a>
      `),gridjs.html(`
        <a href="/user/profile/${e.buyer.id}">@${e.buyer.username}</a>
      `),Number(e.amount),Number(e.percentage),new Date(e.created_at),new Date(e.expires_in),gridjs.html(`
        <button class="btn-action accept" data-id="${e.id}" title="Accept Offer">✅</ button>
        <button class="btn-action reject" data-id="${e.id}" title="Reject Offer">❌</ button>
        `)]),search:!1,sort:!0,style:{table:{width:"100%",fontFamily:"Inter, sans-serif",fontSize:"14px"},th:{textAlign:"center"},td:{textAlign:"center",padding:"12px 10px"}}});try{gridInstance.render(nftsWrapper),gridInstance.forceRender(nftsWrapper)}catch(e){}}async function renderNfts(e){var t;nftsWrapper.innerHTML="",currentNfts=[];for(t of e)currentNfts.push(t),t.image=await(async e=>{e=await fetch(`/nft/${e}/get-image`);if(e.ok)return e.url;console.log(e)})(t.token_id),renderNft(t)}function renderNft(e){var t=document.createElement("div");t.classList.add("drop__item"),t.innerHTML=`
        <div class="drop__item-img-wrapper">
          <img
            src="${e.image}"
            alt="${e.name} Image"
            class="drop__item-img"
            loading="lazy"
          />
        </div>
        <div class="drop__item-info">
        <a href='/user/profile/${e.owner_id}'>
          <div class="drop__item-author-wrapper">
            <h6 class="drop__item-author">${e.owner}</h6>
            <svg class="drop__item-author--verified"></svg>
          </div>
        </a>
          <h5 class="drop__item-title">
            <a href='/nft/${e.token_id}'>
              ${e.name}
            </a>
          </h5>
        </div>
        <div class="drop__item-price-wrapper">
          <div class="drop__item-mint-wrapper">
            <p class="drop__item-mint-desc">Minting</p>
            <div class="drop__item-mint-status">
              ${e.is_listed?'<div class="status-dot"></div><p>Now</p>':"<p>No</p>"}
            </div>
          </div>
          <div class="drop__item-price-info">
            <p class="drop__item-price-desc">Price</p>
            <p class="drop__item-price-status">${e.price} ETH</p>
          </div>
        </div>
    `,nftsWrapper.appendChild(t)}function noNftsRender(){var e=tabs[currentTab-1].textContent,t=(nftsWrapper.innerHTML="",document.createElement("div"));t.classList.add("no-drops-card"),t.innerHTML=`
    <div class="no-drops-icon">🚫</div>
    <h2>User has no NFTs in ${e}</h2>
    <p>Come back soon — Maybe they will appear!</p>
      `,nftsWrapper.appendChild(t)}document.addEventListener("DOMContentLoaded",async()=>{var e={currentTab:Number(currentTab),sortBy:1,search:""};currentTab=1,sessionStorage.setItem("currentProfileTab",currentTab),initApp(),await loadNfts(e)});
//# sourceMappingURL=profile.min.js.map
