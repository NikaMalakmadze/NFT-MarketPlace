import{fetchWithAuth}from"./../../../main/main/js/useAuth.min.js";let trustedByScroller=document.querySelector("#trustedBy"),trustedByScrollerInner=trustedByScroller.querySelector(".scroll__items"),categoryBtns=document.querySelectorAll(".categories__btn"),nftsWrapper=document.querySelector(".categories__drops-wrapper"),loader=document.getElementById("categoryLoader"),moreCategoryBtnText=document.querySelector("#categoriesMoreBtn .btn__text"),currentCategory=sessionStorage.getItem("currentCategory")??1,hoverTime=null,scrollable=!1;function initApp(){initCategoryBtns(),addAnimation(),document.addEventListener("DOMContentLoaded",async()=>{await loadNfts(currentCategory),await getCollections()})}function initCategoryScroll(){5<nftsWrapper.children.length&&(nftsWrapper.addEventListener("mouseenter",()=>{hoverTime=setTimeout(()=>{scrollable=!0,nftsWrapper.classList.add("scroll")},700)}),nftsWrapper.addEventListener("mouseleave",()=>{clearTimeout(hoverTime),scrollable=!1,nftsWrapper.classList.remove("scroll")}),nftsWrapper.addEventListener("wheel",categoryScroll,{passive:!1}))}function categoryScroll(e){scrollable&&0!==e.deltaY&&(e.preventDefault(),nftsWrapper.scrollLeft+=e.deltaY)}function addAnimation(){Array.from(trustedByScrollerInner.children).forEach(e=>{e=e.cloneNode(!0);e.setAttribute("aria-hidden",!0),trustedByScrollerInner.appendChild(e)})}function changeCategoryMoreBtn(e){e=e.querySelector(".categories__btn-text").textContent;moreCategoryBtnText.textContent="View All in "+e}function initCategoryBtns(){var e=categoryBtns[currentCategory-1];e.classList.add("active"),changeCategoryMoreBtn(e),categoryBtns.forEach(e=>{e.addEventListener("click",nftsByCategory)})}async function nftsByCategory(e){categoryBtns.forEach(e=>e.classList.remove("active"));var e=e.target.closest(".categories__btn"),t=(e.classList.add("active"),e.dataset.categoryid);sessionStorage.setItem("currentCategory",t),changeCategoryMoreBtn(e),loader.style.display="flex",nftsWrapper.style.display="none",await loadNfts(t)}async function loadNfts(e){try{var t=await fetchWithAuth("api/nft/get-category-nfts/"+e,{method:"GET"}),r=await t.json();t.ok?0===r.nfts.length?noNftsRender(e):renderNfts(r.nfts):(noNftsRender(e),console.log(r.error))}catch(e){console.error(e)}finally{setTimeout(()=>{loader.style.display="none",nftsWrapper.style.display="flex"},200)}}async function renderNfts(e){var t;nftsWrapper.innerHTML="";for(t of e)t.image=await(async e=>{e=await fetch(`/nft/${e}/get-image`);if(e.ok)return e.url;console.log(e)})(t.token_id),renderNft(t)}function noNftsRender(e){var e=categoryBtns[e-1].querySelector(".categories__btn-text").textContent,t=(nftsWrapper.innerHTML="",document.createElement("div"));t.classList.add("no-drops-card"),t.innerHTML=`
    <div class="no-drops-icon">ðŸš«</div>
    <h2>No Latest Drops In ${e}</h2>
    <p>Come back soon â€” new NFTs are dropping regularly!</p>
      `,nftsWrapper.appendChild(t)}function renderNft(e){var t=document.createElement("div");t.classList.add("drop__item"),t.innerHTML=`
        <div class="drop__item-img-wrapper">
          <img
            src="${e.image}"
            alt="${e.name} Image"
            class="drop__item-img"
            loading="lazy"
          />
        </div>
        <div class="drop__item-info">
        <a href='/user/profile/${e.owner_id}'>
          <div class="drop__item-author-wrapper">
            <h6 class="drop__item-author">${e.owner}</h6>
            <svg class="drop__item-author--verified"></svg>
          </div>
        </a>
          <h5 class="drop__item-title">
            <a href='nft/${e.token_id}'>
              ${e.name}
            </a>
          </h5>
        </div>
        <div class="drop__item-price-wrapper">
          <div class="drop__item-mint-wrapper">
            <p class="drop__item-mint-desc">Minting</p>
            <div class="drop__item-mint-status">
              ${e.is_listed?'<div class="status-dot"></div><p>Now</p>':"<p>No</p>"}
            </div>
          </div>
          <div class="drop__item-price-info">
            <p class="drop__item-price-desc">Price</p>
            <p class="drop__item-price-status">${e.price} ETH</p>
          </div>
        </div>
    `,nftsWrapper.appendChild(t)}async function getCollections(){var e=document.getElementById("nft-table");if(e)try{var t,r=await fetchWithAuth("/api/nft-collection/top-collections",{method:"GET"}),n=await r.json();r.ok&&Array.isArray(n)?(e.innerHTML="",t=n.map(e=>[e.rank,gridjs.html(`
        <a href='/collection/${e.id}'>
          <div style="display: flex; align-items: center; gap: 10px; justify-content: left">
            <div style="width: 40px; height: 40px; border-radius: 50%; overflow: hidden;">
              <img src="/collection/${e.id}/get-image/logo" style="object-fit: cover; width: 100%;   height: 100%;" />
            </div>
            <span>${e.name}</span>
          </div>
        </a>
      `),e.total_nfts,Number(e.volume),Number(e.floor_price),e.sales,e.owners]),new gridjs.Grid({columns:["#",{name:"Collection",sort:!1},"NFTS",{name:"Volume",formatter:e=>gridjs.html(e+" ETH")},{name:"Floor Price",formatter:e=>gridjs.html(e+" ETH")},"Sales","Owners"],data:t,search:!1,pagination:!1,sort:!0,resizable:!0,style:{table:{width:"100%",fontFamily:"Inter, sans-serif",fontSize:"14px"},th:{padding:"12px 10px",height:"50px",verticalAlign:"middle",textAlign:"left"},td:{textAlign:"center",padding:"12px 10px",height:"50px",verticalAlign:"middle"}}}).render(e)):console.error("Failed to load collection data")}catch(e){console.error("Error loading top collections:",e)}}initApp();
//# sourceMappingURL=index.min.js.map
