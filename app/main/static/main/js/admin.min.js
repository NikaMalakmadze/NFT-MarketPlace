import{fetchWithAuth}from"./../../../main/main/js/useAuth.min.js";async function getData(e){try{var t=await fetchWithAuth("/api/admin/"+e,{method:"GET"}),a=await t.json();if(t.ok)return a;a.errors.forEach(e=>console.error(e))}catch(e){console.log(e)}}async function getCategories(){try{var e=await fetchWithAuth("/api/category/",{method:"GET"}),t=await e.json();if(e.ok)return t;t.errors.forEach(e=>console.error(e))}catch(e){console.log(e)}}document.addEventListener("DOMContentLoaded",function(){let t,a,o,n,r,s,i,l,c,d=document.querySelectorAll(".sidebar__item"),m=document.querySelectorAll(".page");function u(e){switch(e){case"users":g(e);break;case"nfts":y(e);break;case"collections":(async e=>{o&&o.destroy(),e=await getData(e),(o=new gridjs.Grid({columns:["ID","Name","Description","Owner","Category",{name:"Royalty %",formatter:e=>gridjs.html("%"+e)},"# NFTs",{name:"Floor Price",formatter:e=>(e=Number(e).toFixed(2),gridjs.html(e+" ETH"))},{name:"Volume",formatter:e=>(e=Number(e).toFixed(2),gridjs.html(e+" ETH"))}],data:e.collections.map(e=>[e.id,e.name,e.description,"@"+e.owner,e.category,e.royalty,e.nftCount,e.floorPrice,e.volume]),search:!0,sort:!0,resizable:!0,pagination:{limit:10},style:{table:{border:"none",cursor:"pointer"},th:{"background-color":"#f9fafb",color:"#374151","border-bottom":"1px solid #e5e7eb"},td:{"border-bottom":"1px solid #f3f4f6"}}})).render(document.getElementById("collectionsGrid"))})(e);break;case"categories":v();break;case"offers":b(e);break;case"analytics":h(e)}}function f(e,t="status"){return`<span class="status-badge ${"status"===t?"status-badge--"+e:"status-badge--"+t}">${e}</span>`}async function g(e){t&&t.destroy();e=await getData(e);s=e,(t=new gridjs.Grid({columns:["ID",{name:"Username",formatter:(e,t)=>{t=t.cells[0].data;return gridjs.html(`
              <a href='/user/profile/${t}'>
                ${e}
              </a>
              `)},sort:!1},"Display Name","Email","Role","Balance",{name:"Status",formatter:e=>gridjs.html(f(e))},{name:"Actions",formatter:(e,t)=>{var a=t.cells[0].data,t=t.cells[6].data;return gridjs.html(`
              <div style="display: flex; gap: 8px;">
                <button class="btn btn--small ${"active"===t?"btn--danger":"btn--primary"}" onclick="toggleUserStatus(${a})">
                  ${"active"===t?"Block":"Unblock"}
                </button>
                <button class="btn btn--small btn--secondary" onclick="viewUserNFTs(${a})">
                  View NFTs
                </button>
              </div>
            `)}}],data:e.users.map(e=>[e.id,"@"+e.username,e.displayName,e.email,e.role,e.balance,e.status,null]),search:!0,sort:!0,resizable:!0,pagination:{limit:10},style:{table:{border:"none"},th:{"background-color":"#f9fafb",color:"#374151","border-bottom":"1px solid #e5e7eb"},td:{"border-bottom":"1px solid #f3f4f6"}}})).render(document.getElementById("usersGrid"))}async function y(e){a&&a.destroy();e=await getData(e);i=e,(a=new gridjs.Grid({columns:["Token ID",{name:"Preview",formatter:(e,t)=>{t=t.cells[0].data;return gridjs.html(`
              <a href='/nft/${t}'>
                <img src="${e}" class="thumbnail" alt="NFT Preview">
              </a>
              `)},sort:!1},"Name","Price","Creator","Owner",{name:"Listed?",formatter:e=>gridjs.html(f(e?"Listed":"Not Listed",e?"listed":"secondary"))},{name:"Status",formatter:e=>gridjs.html(f(e))},{name:"Actions",formatter:(e,t)=>{var a=t.cells[0].data,t=t.cells[7].data;return gridjs.html(`
              <button class="btn btn--small ${"active"===t?"btn--danger":"btn--primary"}" onclick="toggleNFTStatus('${a}')">
                ${"active"===t?"Block":"Unblock"}
              </button>
            `)}}],data:e.nfts.map(e=>[e.tokenId,e.image,e.name,e.price,"@"+e.creator,"@"+e.owner,e.listed,e.status,null]),search:!0,sort:!0,resizable:!0,pagination:{limit:10},style:{table:{border:"none"},th:{"background-color":"#f9fafb",color:"#374151","border-bottom":"1px solid #e5e7eb"},td:{"border-bottom":"1px solid #f3f4f6"}}})).render(document.getElementById("nftsGrid"))}async function b(e,t="all"){n&&n.destroy();e=await getData(e);l=e;let r="all"===t?e.offers:e.offers.filter(e=>e.status===t);console.log(e),(n=new gridjs.Grid({columns:[{name:"Token Id",formatter:e=>gridjs.html(`
              <a href='/nft/${e}'>
                ${e}
              </a>
              `),sort:!1},,"Buyer",{name:"Amount",formatter:e=>gridjs.html(e+" ETH")},{name:"% of NFT Price",formatter:e=>(e=Number(e).toFixed(2),gridjs.html("%"+e))},"Created At","Expires In",{name:"Status",formatter:e=>gridjs.html(f(e))},{name:"Actions",formatter:(e,t)=>{var a=t.cells[6].data,o=r.find(e=>e.tokenId===t.cells[0].data&&e.buyer===t.cells[1].data.replace("@","")).id;return"active"===a?gridjs.html(`
                <button class="btn btn--small btn--danger" onclick="cancelOffer(${o})">
                  Cancel
                </button>
              `):"-"}}],data:r.map(e=>[e.tokenId,"@"+e.buyer,e.amount,e.percentage,e.createdAt,e.expiresIn,e.status,null]),search:!0,sort:!0,resizable:!0,pagination:{limit:10},style:{table:{border:"none"},th:{"background-color":"#f9fafb",color:"#374151","border-bottom":"1px solid #e5e7eb"},td:{"border-bottom":"1px solid #f3f4f6"}}})).render(document.getElementById("offersGrid"))}async function h(e,t="all"){r&&r.destroy();e=await getData(e),e="all"===t?e.activity:e.activity.filter(e=>e.type===t);(r=new gridjs.Grid({columns:["NFT Name","User",{name:"Type",formatter:e=>gridjs.html(f(e,"like"===e?"active":"secondary"))},"Timestamp"],data:e.map(e=>[e.nftName,"@"+e.user,e.type,e.timestamp]),search:!0,sort:!0,resizable:!0,pagination:{limit:15},style:{table:{border:"none"},th:{"background-color":"#f9fafb",color:"#374151","border-bottom":"1px solid #e5e7eb"},td:{"border-bottom":"1px solid #f3f4f6"}}})).render(document.getElementById("analyticsGrid"))}async function v(){var e=await getCategories();c=e,document.getElementById("categoriesGrid").innerHTML=e.categories.map(e=>`
      <div class="category-card" dataset-id="${e.id}">
        <div class="category-card__header">
          <div class="category-card__header-left">
            <img src="/nft/category/${e.id}" alt="${e.name} logo" class="category-card__logo">
            <h3 class="category-card__title">${e.name}</h3>
          </div>
          <div class="category-card__actions">
            <button class="btn btn--small btn--secondary" onclick="editCategory(${e.id})">
              Edit
            </button>
            <button class="btn btn--small btn--danger" onclick="deleteCategory(${e.id})">
              Delete
            </button>
          </div>
        </div>
      </div>
    `).join("")}d.forEach(e=>{e.addEventListener("click",function(e){e.preventDefault(),d.forEach(e=>e.classList.remove("sidebar__item--active")),this.classList.add("sidebar__item--active"),m.forEach(e=>e.style.display="none");var e=this.getAttribute("data-page"),t=document.getElementById(e);t&&(t.style.display="block",u(e))})});document.querySelectorAll(".filter-tab").forEach(e=>{e.addEventListener("click",function(){this.parentElement.querySelectorAll(".filter-tab").forEach(e=>e.classList.remove("filter-tab--active")),this.classList.add("filter-tab--active");var e=this.getAttribute("data-filter"),t=document.querySelector(".sidebar__item--active").getAttribute("data-page");"offers"===t?b("offers",e):"analytics"===t&&h("analytics",e)})});var e=document.querySelectorAll(".modal");function p(e){e=document.getElementById(e);e&&(e.classList.add("open"),document.body.style.overflow="hidden")}function w(e){e=document.getElementById(e);e&&(e.classList.remove("open"),document.body.style.overflow="")}document.querySelectorAll(".modal__close").forEach(e=>{e.addEventListener("click",function(){var e=this.closest(".modal");e&&w(e.id)})}),e.forEach(t=>{t.addEventListener("click",function(e){e.target!==t&&!e.target.classList.contains("modal__backdrop")||w(t.id)})});var e=document.getElementById("addCategoryBtn"),E=document.getElementById("categoryForm"),k=document.getElementById("cancelCategory");function I(e,t){document.getElementById("confirmModalMessage").textContent=e;var e=document.getElementById("confirmAction"),a=document.getElementById("cancelConfirm"),o=e.cloneNode(!0),r=a.cloneNode(!0);e.parentNode.replaceChild(o,e),a.parentNode.replaceChild(r,a),o.addEventListener("click",()=>{t(),w("confirmModal")}),r.addEventListener("click",()=>{w("confirmModal")}),p("confirmModal")}e&&e.addEventListener("click",()=>{document.getElementById("categoryModalTitle").textContent="Add Category",document.getElementById("categoryName").value="",document.getElementById("categoryLogo").value="",document.getElementById("categoryIdInput").value="",p("categoryModal")}),k&&k.addEventListener("click",()=>w("categoryModal")),E&&E.addEventListener("submit",async function(e){e.preventDefault();var e=document.getElementById("categoryName").value.trim(),t=document.getElementById("categoryLogo").value.trim(),a=document.getElementById("categoryIdInput").value,o=a?"/api/category/update/"+a:"/api/category/add",r=a?"PATCH":"POST";try{var n=await fetchWithAuth(o,{method:r,body:JSON.stringify({name:e,logo:t}),headers:{"Content-Type":"application/json"}}),s=await n.json();n.ok?(await v(),w("categoryModal"),alert(`Category ${a?"updated":"added"} successfully!`)):alert(s.message||"Error saving category")}catch(e){console.error("Error:",e),alert("Something went wrong")}}),window.toggleUserStatus=function(a){let o=s.users.find(e=>e.id===a);o&&I(`Are you sure you want to ${"active"===o.status?"block":"unblock"} user "${o.displayName}"?`,async()=>{try{var e=await fetchWithAuth(`/api/admin/users/${a}/status`,{method:"PATCH"});if(!e.ok)throw new Error("Failed to update User status");var t=await e.json();o.status=t.status,g("users")}catch(e){console.error("Error toggling User status:",e),alert("Something went wrong. Please try again.")}})},window.viewUserNFTs=function(t){var e,a=s.users.find(e=>e.id===t);a&&(e=document.getElementById("userNftsContent"),a.nfts&&0<a.nfts.length?e.innerHTML=`
          <div class="nft-grid">
            ${a.nfts.map(e=>`
            <a href='${e.url}'>
              <div class="nft-item">
                <img src="${e.image}" alt="${e.name}" class="nft-item__image">
                <div class="nft-item__content">
                  <h4 class="nft-item__title">${e.name}</h4>
                  <p class="nft-item__price">${e.price}</p>
                </div>
              </div>
            </a>
            `).join("")}
          </div>
        `:e.innerHTML=`
          <div style="text-align: center; padding: 40px; color: #6b7280;">
            <p>This user has no NFTs.</p>
          </div>
        `,p("userNftsModal"))},window.toggleNFTStatus=function(a){let o=i.nfts.find(e=>e.tokenId===a);o&&I(`Are you sure you want to ${"active"===o.status?"block":"unblock"} NFT "${o.name}"?`,async()=>{try{var e=await fetchWithAuth(`/api/admin/nfts/${a}/status`,{method:"PATCH"});if(!e.ok)throw new Error("Failed to update NFT status");var t=await e.json();o.status=t.status,y("nfts")}catch(e){console.error("Error toggling NFT status:",e),alert("Something went wrong. Please try again.")}})},window.viewCollectionNFTs=function(t){var e=mockData.collections.find(e=>e.id===t);e&&alert("Viewing NFTs for collection: "+e.name)},window.editCategory=function(t){var e=c.categories.find(e=>e.id===t);e&&(document.getElementById("categoryModalTitle").textContent="Edit Category",document.getElementById("categoryName").value=e.name,document.getElementById("categoryLogo").value=e.logo_url,document.getElementById("categoryIdInput").value=e.id,p("categoryModal"))},window.deleteCategory=function(t){var e=mockData.categories.find(e=>e.id===t);e&&I(`Are you sure you want to delete category "${e.name}"?`,()=>{})},window.cancelOffer=function(t){let a=l.offers.find(e=>e.id===t);a&&I(`Are you sure you want to cancel the offer for "${a.nftName}"?`,async()=>{var e=await fetchWithAuth(`/api/admin/offers/${a.id}/cancel`,{method:"PATCH"}),t=await e.json();e.ok?(alert("Offer canceled."),a.status=t.data,b("offers","all")):alert(t.message||"Failed to cancel offer.")})},u("dashboard")});
//# sourceMappingURL=admin.min.js.map
